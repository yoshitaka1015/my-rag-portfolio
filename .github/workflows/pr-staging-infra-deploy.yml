name: pr-staging-infra-deploy.yml
run-name: "${{ github.workflow }} • ${{ github.ref_name }} • ${{ github.sha }}"

on:
  # main 以外へのPRでも発火（開発ブランチ間PRも可）
  pull_request:
    branches-ignore:
      - main
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'terraform/**'
      - '.github/workflows/pr-staging-infra-deploy.yml'
  # 手動実行も可能
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: serious-timer-467517-e1
  REGION: us-central1

jobs:
  deploy-infra-staging:
    name: Terraform Apply (staging)
    runs-on: ubuntu-latest

    # フォークPR/DependabotはSecretsが渡らないためスキップ
    if: ${{ github.event_name != 'pull_request' || (github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]') }}

    # 同一ブランチでの多重実行を抑止
    concurrency:
      group: tf-stg-${{ github.event.pull_request.head.ref || github.ref_name }}
      cancel-in-progress: false

    steps:
      - name: Debug event context
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "pr_base=${{ github.event.pull_request.base.ref || 'N/A' }}"
          echo "pr_head=${{ github.event.pull_request.head.ref || 'N/A' }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # 以降の terraform サブコマンドに変数を自動適用（TF_VAR_*）
      - name: Export Terraform variables (TF_VAR_*)
        shell: bash
        run: |
          echo "TF_VAR_project_id=${PROJECT_ID}"   >> "$GITHUB_ENV"
          echo "TF_VAR_region=${REGION}"           >> "$GITHUB_ENV"
          echo "TF_VAR_environment=staging"        >> "$GITHUB_ENV"
          echo "TF_VAR_source_bucket_name=bkt-${PROJECT_ID}-rag-resource-staging" >> "$GITHUB_ENV"
          echo "TF_VAR_output_bucket_name=bkt-${PROJECT_ID}-rag-output-staging"  >> "$GITHUB_ENV"

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false -upgrade

      - name: Select or Create Workspace (staging)
        run: |
          terraform -chdir=terraform workspace select staging \
            || terraform -chdir=terraform workspace new staging

      - name: Terraform Plan (staging)
        run: terraform -chdir=terraform plan -input=false

      - name: Terraform Apply (staging)
        run: terraform -chdir=terraform apply -auto-approve -input=false

      - name: Outputs
        run: |
          terraform -chdir=terraform output -json > tfout.json || true
          echo '### Terraform Outputs' >> "$GITHUB_STEP_SUMMARY"
          cat tfout.json >> "$GITHUB_STEP_SUMMARY" || true