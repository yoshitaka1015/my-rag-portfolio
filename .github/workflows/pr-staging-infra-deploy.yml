# mainへのpushでTerraform（prod）を適用する
# - WIFでGCP認証
# - Workspaceは 'prod' を固定
# - us-central1 / serious-timer-467517-e1 に統一
# - environment=prod を明示

name: Deploy Infrastructure to Production on Merge

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/merge-prod-infra-deploy.yml'

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: serious-timer-467517-e1
  REGION: us-central1

jobs:
  deploy-infra-prod:
    name: Terraform Apply (prod)
    runs-on: ubuntu-latest

    concurrency:
      group: tf-prod
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false

      - name: Select or Create Workspace (prod)
        run: |
          terraform -chdir=terraform workspace select prod \
          || terraform -chdir=terraform workspace new prod

      - name: Terraform Plan (prod)
        run: terraform -chdir=terraform plan -input=false \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.REGION }}" \
          -var="environment=prod"

      - name: Terraform Apply (prod)
        run: terraform -chdir=terraform apply -auto-approve -input=false \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.REGION }}" \
          -var="environment=prod"

      - name: Output URLs (optional)
        id: out
        continue-on-error: true
        run: |
          terraform -chdir=terraform output -json > tfout.json
          cat tfout.json

